metafor::funnel(x = lnRR_not_extreme$LRR, # log response ratio
vi = lnRR_not_extreme$var_LRR, # sampling variances
yaxis = "seinv", # inverse standard error
digits = 2,
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray75"),
las = 3,
xlab = "Response Ratio (RR)",
# atransf = exp, # transform from log response ratio to just response ratio
legend = TRUE)
metafor::forest(MLMA)
metafor::forest(x = lnRR_data$LRR,
vi = lnRR_data$var_LRR
)
exp(0)
with(lnRR_data, metafor::forest(x = lnRR_data$LRR,
vi = lnRR_data$var_LRR,
slab = paste(Authors, Year..print., sep = ", "),
transf = exp,
#alim = c(0,2),
steps = 5,
xlim = c(-13,13),
refline=1, # if exp transformed lnRR
cex =.9,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = lnRR_data$LRR,
vi = lnRR_data$var_LRR,
slab = paste(Authors, Year..print., sep = ", "),
transf = exp,
alim = c(0,2),
steps = 5,
xlim = c(-13,13),
refline=1, # if exp transformed lnRR
cex =.9,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Authors, Year..print., sep = ", "),
transf = exp,
alim = c(0,2),
steps = 5,
xlim = c(-13,13),
refline=1, # if exp transformed lnRR
cex =.9,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Authors),
transf = exp,
alim = c(0,2),
steps = 5,
xlim = c(-13,13),
refline=1, # if exp transformed lnRR
cex =.9,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
alim = c(0,2),
steps = 5,
xlim = c(-13,13),
refline=1, # if exp transformed lnRR
cex =.9,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
alim = c(0,2),
steps = 5,
xlim = c(-13,13),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
alim = c(0,2),
steps = 5,
# xlim = c(-13,13),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
alim = c(0,2),
steps = 5,
xlim = c(-20,13),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
alim = c(0,2),
steps = 5,
xlim = c(-13,13),
ylim = c(-100,100),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
alim = c(0,2),
steps = 5,
xlim = c(-13,13),
ylim = c(-10,10),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
alim = c(-13,13),
steps = 5,
xlim = c(-13,13),
ylim = c(-10,10),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
# alim = c(-13,13),
steps = 5,
xlim = c(-13,13),
ylim = c(-10,10),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
# alim = c(-13,13),
steps = 5,
# xlim = c(-13,13),
# ylim = c(-10,10),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
alim = c(-13,13),
steps = 5,
xlim = c(-13,13),
ylim = c(-10,10),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
#alim = c(-13,13),
steps = 5,
xlim = c(-13,13),
ylim = c(-10,10),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
slab = paste(Study),
transf = exp,
alim = c(-13,13),
steps = 5,
xlim = c(-13,13),
ylim = c(0,92),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
# slab = paste(Study),
transf = exp,
alim = c(-13,13),
steps = 5,
xlim = c(-13,13),
ylim = c(0,92),
refline=1, # if exp transformed lnRR
cex =.6,
header=TRUE
)
)
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
# slab = paste(Study),
transf = exp,
alim = c(-13,13),
steps = 5,
xlim = c(-13,13),
ylim = c(0,92),
refline=1, # if exp transformed lnRR
cex =.9,
header=TRUE
)
)
metafor::funnel(x = lnRR_data[lnRR_data$var_LRR > 10e-6,]$LRR, # log response ratio
vi = lnRR_data[lnRR_data$var_LRR > 10e-6,]$var_LRR, # sampling variances
yaxis = "seinv", # inverse standard error
digits = 2,
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray75"),
las = 1,
xlab = "Response Ratio (RR)",
#atransf = exp, # transform from log response ratio to just response ratio
legend = TRUE)
metafor::funnel(x = lnRR_data$LRR, # log response ratio
vi = lnRR_data$var_LRR, # sampling variances
yaxis = "seinv", # inverse standard error
digits = 2,
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray75"),
las = 1,
xlab = "Response Ratio (RR)",
#atransf = exp, # transform from log response ratio to just response ratio
legend = TRUE)
metafor::funnel(x = lnRR_not_extreme$LRR, # log response ratio
vi = lnRR_not_extreme$var_LRR, # sampling variances
yaxis = "seinv", # inverse standard error
digits = 2,
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray75"),
las = 3,
xlab = "Response Ratio (RR)",
# atransf = exp, # transform from log response ratio to just response ratio
legend = TRUE)
# excluding data points with very small variance, less than 10e-6 (5 data points)
ggplot(lnRR_not_extreme, aes(y = 1/sqrt(var_LRR), x = tanh(LRR))) + geom_point() + geom_vline(aes(xintercept = 0)) +
labs(y = "Precision (1/SE)", x = "Response Ratio (RR)") + theme_bw()
lnRR_not_extreme <- lnRR_data[lnRR_data$var_LRR > 10e-6,]
lnRR_not_extreme <- lnRR_data[lnRR_data$LRR < 4,]
# excluding data points with very small variance, less than 10e-6 (5 data points)
ggplot(lnRR_not_extreme, aes(y = 1/sqrt(var_LRR), x = tanh(LRR))) + geom_point() + geom_vline(aes(xintercept = 0)) +
labs(y = "Precision (1/SE)", x = "Response Ratio (RR)") + theme_bw()
```{r funnelPlotFixed, echo=FALSE, fig.cap="Funner plot depicting the response ratio of treatment to control as a function of precision (1/SE), excluding observations with lnRR values less than 10e-6. "}
# excluding data points with very small variance, less than 10e-6 (5 data points)
ggplot(lnRR_data[lnRR_data$var_LRR > 10e-6,], aes(y = 1/sqrt(var_LRR), x = tanh(LRR))) + geom_point() + geom_vline(aes(xintercept = 0)) +
labs(y = "Precision (1/SE)", x = "Response Ratio (RR)") + theme_bw()
# Funnel plot
lnRR_not_extreme <- lnRR_data[lnRR_data$var_LRR > 10e-6,]
lnRR_not_extreme <- lnRR_data[lnRR_data$LRR < 4,]
ggplot(lnRR_data, aes(y = LRR, x = Year..online.., size = 1/sqrt(1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Online Year",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
data_full <- data_full %>% mutate(Year.online = Year..online.,
Year.print = Year..print.)
# add observation level
data_full$residual <- 1:dim(data_full)[1]
# write the altered data to another csv file
write_csv(data_full, './output/meta_data_final.csv')
lnRR_data <- metafor::escalc(data = data_full,
measure = "ROM", # measure = ROM, for log transformed ratio of means
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd, # sd control
n2i = ctrl.n,
var.names = c("LRR", "var_LRR") # column names
)
# Note that lnRR doesn't work with negative means, meaning the negative values produce NaNs :]
lnRR_data <- na.omit(lnRR_data) # remove the NA values from the data!
MLMA <- metafor::rma.mv(yi = LRR ~ var_LRR, # effect size measure log response ratio with sampling variance as fixed effect
V = var_LRR, # sampling variance of LRR
# fit model using restricted maximum likelihood (considers degrees freedom, better for small sample sizes)
method = "REML",
# random-effects of the model study and observation (residual)
random = list(~1 | Study,
~1 | residual
#, ~1 | Species
),
test = "t", # use the t test statistic
data = lnRR_data)
summary(MLMA)
MLMA <- metafor::rma.mv(yi = LRR ~ var_LRR, # effect size measure log response ratio with sampling variance as fixed effect
V = var_LRR, # sampling variance of LRR
# fit model using restricted maximum likelihood (considers degrees freedom, better for small sample sizes)
method = "REML",
# random-effects of the model study and observation (residual)
random = list(~1 | Study,
~1 | residual
#, ~1 | Species
),
test = "t", # use the t test statistic
data = lnRR_data)
summary(MLMA)
r2 <- r2_ml(MLMA) # calculate r2 for multilevel model using function from orchaRd package
r2
# calculate proportion of heterogeneity
i2_vals <- i2_ml(MLMA)
# make table of i^2 estimate
i2 <- tibble(type = firstup(gsub("I2_", "", names(i2_vals))), I2 = i2_vals)
i2_flex <- flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
i2_flex <- set_caption(i2_flex,
caption = "Table 1: Total effect size hetereogneity (Total), as well as the proportion of hetereogeneity in effects resulting from Study and Residual / Observational")
i2_flex
ggplot(lnRR_data, aes(y = LRR, x = Year..online.., size = 1/sqrt(1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Online Year",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = 1/sqrt(1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Online Year",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = (1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Online Year",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
MLMA <- metafor::rma.mv(yi = LRR ~ Year.online, # effect size measure log response ratio with year as fixed effect
V = var_LRR, # sampling variance of LRR
# fit model using restricted maximum likelihood (considers degrees freedom, better for small sample sizes)
method = "REML",
# random-effects of the model study and observation (residual)
random = list(~1 | Study,
~1 | residual
#, ~1 | Species
),
test = "t", # use the t test statistic
data = lnRR_data)
summary(MLMA)
summary(MLMA_year)
MLMA_year <- metafor::rma.mv(yi = LRR ~ Year.online,
# effect size measure log response ratio with year as fixed effect
V = var_LRR, # sampling variance of LRR
# fit model using restricted maximum likelihood (considers degrees freedom, better for small sample sizes)
method = "REML",
# random-effects of the model study and observation (residual)
random = list(~1 | Study,
~1 | residual
#, ~1 | Species
),
test = "t", # use the t test statistic
data = lnRR_data)
MLMA_year <- metafor::rma.mv(yi = LRR ~ Year.online,
# effect size measure log response ratio with year as fixed effect
V = var_LRR, # sampling variance of LRR
# fit model using restricted maximum likelihood (considers degrees freedom, better for small sample sizes)
method = "REML",
# random-effects of the model study and observation (residual)
random = list(~1 | Study,
~1 | residual
#, ~1 | Species
),
test = "t", # use the t test statistic
data = lnRR_data)
MLMA_year <- metafor::rma.mv(yi = LRR ~ Year.online + var_LRR,
# effect size measure log response ratio with year as fixed effect
V = var_LRR, # sampling variance of LRR
# fit model using restricted maximum likelihood (considers degrees freedom, better for small sample sizes)
method = "REML",
# random-effects of the model study and observation (residual)
random = list(~1 | Study,
~1 | residual
#, ~1 | Species
),
test = "t", # use the t test statistic
data = lnRR_data)
summary(MLMA_year)
r2_time <- r2_ml(MLMA_year)
r2_time
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = (1/sqrt(var_LRR)), colour = Study)) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Year (online)",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = (1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Year (online)",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
text(-5, -10, pos=4, cex=.5, "number of samples: 628; number of studies: 89 " )
# not sure how to make forest plot with 92 different study levels
# can't seem to get it to work for just all the data
with(lnRR_data, metafor::forest(x = LRR,
vi = var_LRR,
# slab = paste(Study),
transf = exp,
alim = c(-13,13),
steps = 5,
xlim = c(-13,13),
ylim = c(0,92),
refline=1, # if exp transformed lnRR
cex =.9,
header=TRUE
)
)
i2_flex
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = (1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Year (online)",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic() +
scale_y_discrete()
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = (1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Year (online)",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic() +
scale_x_discrete()
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = (1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Year (online)",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic()
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = (1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Year (online)",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic() +
scale_x_continuous(breaks = c(2009, 2012, 2014, 2016, 2018))
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = (1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Year (online)",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic() +
scale_x_continuous(breaks = c(2009, 2011, 2013, 2015, 2017, 2019))
ggplot(lnRR_data, aes(y = LRR, x = Year.online, size = (1/sqrt(var_LRR)))) +
geom_point(alpha = 0.3) +
geom_smooth(method = lm, col = "red", show.legend = FALSE) +
labs(x = "Publication Year (online)",
y = "Log Response Ratio (lnRR)", size = "Precision (1/SE)") +
theme_classic() +
scale_x_continuous(breaks = c(2009, 2010, 2011, 2012, 2013, 2014, 2015,2016, 2017, 2018, 2019))
MLMA_year <- metafor::rma.mv(yi = LRR ~ Year.online,
# effect size measure log response ratio with year as fixed effect
V = var_LRR, # sampling variance of LRR
# fit model using restricted maximum likelihood (considers degrees freedom, better for small sample sizes)
method = "REML",
# random-effects of the model study and observation (residual)
random = list(~1 | Study,
~1 | residual
#, ~1 | Species
),
test = "t", # use the t test statistic
data = lnRR_data)
MLMA_year <- metafor::rma.mv(yi = LRR ~ Year.online,
# effect size measure log response ratio with year as fixed effect
V = var_LRR, # sampling variance of LRR
# fit model using restricted maximum likelihood (considers degrees freedom, better for small sample sizes)
method = "REML",
# random-effects of the model study and observation (residual)
random = list(~1 | Study,
~1 | residual
#, ~1 | Species
),
test = "t", # use the t test statistic
data = lnRR_data)
summary(MLMA_year)
