# install and load packages
library(pacman)
p_load(bookdown, tidyr, dplyr, ggplot2, readr, tibble, knitr, ggforce, flextable, latex2exp, png, magick)
# loading in the data
clark_path <- './data/OA_activitydat_20190302_BIOL3207.csv'
meta_path <- './data/ocean_meta_data.csv'
clark_data <- read.csv(clark_path, stringsAsFactors = T)
meta_data  <- read.csv(meta_path, stringsAsFactors = T)
clark_clean <- clark_data %>% na.omit() %>% # remove NA values
subset(., select = -c(X, comment, loc, size, animal_id)) # drop irrelevant columns
# Check for spelling errors in species and treatment
levels(clark_clean$species)
levels(clark_clean$treatment)
clark_data <- read.csv(clark_path, stringsAsFactors = T)
summary_data <- clark_clean %>%
group_by(species, treatment) %>%
summarise(mean = mean(activity, na.rm = TRUE),
sd = sd(activity, na.rm = TRUE),
n = length(unique(animal_id))) %>%
rename(Species = "species")
summary_data <- clark_data %>%
group_by(species, treatment) %>%
summarise(mean = mean(activity, na.rm = TRUE),
sd = sd(activity, na.rm = TRUE),
n = length(unique(animal_id))) %>%
rename(Species = "species")
summary_data
# Generate summary statistics for each fish species in clark data
data_summary <- clark_data %>%
group_by(species, treatment) %>%
summarise(mean_activity = mean(activity),
std_activity = sd(activity)/length(activity),
n = n() ) # sample size
summary_data
data_summary <- clark_data %>%
group_by(species, treatment) %>%
summarise(mean = mean(activity, na.rm = TRUE),
sd = sd(activity, na.rm = TRUE),
n = length(unique(animal_id))) %>%
rename(Species = "species")
summary_data
data_summary
data_summary <- clark_data %>%
group_by(species, treatment) %>%
summarise(mean_activity = mean(activity),
std_activity = sd(activity)/length(activity),
n = n() ) # sample size
data_summary
# Use flextable to render the summary table in a tidy format
data_summary %>%
group_by(species) %>%
flextable()
# loading in the data
clark_path <- './data/OA_activitydat_20190302_BIOL3207.csv'
meta_path <- './data/ocean_meta_data.csv'
clark_data <- read.csv(clark_path, stringsAsFactors = T)
meta_data  <- read.csv(meta_path, stringsAsFactors = T)
# install and load packages
library(pacman)
p_load(bookdown, tidyr, dplyr, ggplot2, readr, tibble, knitr, ggforce, flextable, latex2exp, png, magick)
# loading in the data
clark_path <- './data/OA_activitydat_20190302_BIOL3207.csv'
meta_path <- './data/ocean_meta_data.csv'
clark_data <- read.csv(clark_path, stringsAsFactors = T)
meta_data  <- read.csv(meta_path, stringsAsFactors = T)
# Generate summary statistics of activity for each fish species and treatment in clark data
data_summary <- clark_data %>%
group_by(species, treatment) %>%
summarise(mean = mean(activity, na.rm = TRUE),
sd = sd(activity, na.rm = TRUE),
n = length(unique(animal_id))) %>%
rename(Species = "species")
data_summary
# Use flextable to render the summary table in a tidy format
data_summary %>%
group_by(species) %>%
flextable()
# Use flextable to render the summary table in a tidy format
data_summary %>%
group_by(Species) %>%
flextable()
colnames(meta_data)
clark_meta_path <- './data/clark_paper_data.csv'
clark_meta <- read.csv(clark_meta_path)
View(clark_data)
View(clark_meta)
# merge the clark data summary with the clark meta data
total_clark <- cbind(clark_meta, data_summary)
View(total_clark)
View(meta_data)
# need to move the different treatments into columns
clark_final <- pivot_wider(total_clark, names_from = treatment,
names_glue = "{treatment}_{.value}",
values_from = c("mean", "sd", "n"))
clark_final
dim(meta_data)
dim(clark_final)
dim(meta_data)
dim(clark_final)
# rename columns to match meta data column names
clark_final <- clark_final %>% rename("oa.mean" = CO2_mean,
"oa.sd" = CO2_sd,
"oa.n" = CO2_n,
"ctrl.mean" = control_mean,
"ctrl.sd" = control_sd,
"ctrl.n" = control_n)
names(meta_data)
names(clark_final)
names(meta_data) == names(clark_final)
# reorder the columns to match meta data
clark_final <- clark_final[names(meta_data)]
col_names(clark_final) == col_names(meta_data)
colnames(clark_final) == colnames(meta_data)
# bind the two data sets by rows
data_full <- rbind(meta_data, clark_final)
View(data_full)
View(clark_meta)
total_clark
clark_final
meta_data
clark_final
# bind the two data sets by rows
data_full <- rbind(meta_data, clark_final)
View(clark_final)
# The Pub.year.IF and X2017.IF are factors in the meta data set
as.factor(clark_final$Pub.year.IF)
clark_final$Pub.year.IF <- as.factor(clark_final$Pub.year.IF)
clark_final$X2017.IF <- as.factor(clark_final$X2017.IF)
# bind the two data sets by rows
data_full <- rbind(meta_data, clark_final)
write_csv(data_full, './output/meta_data_final.csv')
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
metafor::escalc(measure = "ROM",
m1i = oa.mean, # mean treatment
m2i = ctrl.mean, # mean control
sd1i = oa.sd, # sd treatment
sd2i = ctrl.sd,
n1i = oa.n,
n2i = ctrl.n,
data = data_full,
var.names = c("lnRR", "var_lnRR"))
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(measure = "ROM",
m1i = oa.mean, # mean treatment
m2i = ctrl.mean, # mean control
sd1i = oa.sd, # sd treatment
sd2i = ctrl.sd,
n1i = oa.n,
n2i = ctrl.n,
data = data_full,
var.names = c("lnRR", "var_lnRR"))
lnRR_data %>% slice_head(n = 5)
filter(is.na(data_full))
is.na(data_full)
is.na(data_full$ctrl.n)
filter(is.na(data_full$ctrl.mean))
select(is.na(data_full$ctrl.mean))
data_full[is.na(data_full$ctrl.mean)]
data_full[is.na(data_full$ctrl.sd)]
data_full[is.na(data_full$ctrl.n)]
data_full[is.na(data_full$oa.n)]
data_full[is.na(data_full$oa.mean)]
data_full[is.na(data_full$oa.sd)]
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(measure = "ROM",
m1i = oa.mean, # mean treatment
m2i = ctrl.mean, # mean control
sd1i = oa.sd, # sd treatment
sd2i = ctrl.sd,
n1i = oa.n,
n2i = ctrl.n,
data = data_full,
var.names = c("lnRR", "var_lnRR"))
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(measure = "ROM",
m1i = oa.mean, # mean treatment
m2i = ctrl.mean, # mean control
sd1i = oa.sd, # sd treatment
sd2i = ctrl.sd,
n1i = oa.n,
n2i = ctrl.n,
data = data_full,
var.names = c("lnRR", "var_lnRR"),
digits = 4)
lnRR_data %>% slice_head(n = 5)
View(clark_final)
mean(data_full$ctrl.mean)
mean(data_full$oa.mean)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(measure = "ROM",
m1i = oa.mean, # mean treatment
m2i = ctrl.mean, # mean control
sd1i = oa.sd, # sd treatment
sd2i = ctrl.sd,
n1i = oa.n,
n2i = ctrl.n,
data = filter(ctrl.mean > 1, data_full),
var.names = c("lnRR", "var_lnRR"),
digits = 4)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(measure = "ROM",
m1i = oa.mean, # mean treatment
m2i = ctrl.mean, # mean control
sd1i = oa.sd, # sd treatment
sd2i = ctrl.sd,
n1i = oa.n,
n2i = ctrl.n,
data = filter(data_full$ctrl.mean > 1),
var.names = c("lnRR", "var_lnRR"),
digits = 4)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n,
data = data_full)
lnRR_data %>% slice_head(n = 5)
# install and load packages
library(pacman)
p_load(bookdown, tidyr, dplyr, ggplot2, readr, tibble, knitr, ggforce, flextable, latex2exp, png, magick)
# loading in the data
clark_path <- './data/OA_activitydat_20190302_BIOL3207.csv'
meta_path <- './data/ocean_meta_data.csv'
clark_data <- read.csv(clark_path, stringsAsFactors = T)
meta_data  <- read.csv(meta_path, stringsAsFactors = T)
# loading the meta data for clark data
clark_meta_path <- './data/clark_paper_data.csv'
clark_meta <- read.csv(clark_meta_path)
# Generate summary statistics of activity for each fish species and treatment in clark data
data_summary <- clark_data %>%
group_by(species, treatment) %>%
summarise(mean = mean(activity, na.rm = TRUE),
sd = sd(activity, na.rm = TRUE),
n = length(unique(animal_id))) %>%
rename(Species = "species")
# Use flextable to render the summary table in a tidy format
data_summary %>%
group_by(Species) %>%
flextable()
# merge the clark data summary with the clark meta data by columns
total_clark <- cbind(clark_meta, data_summary)
# need to move the different treatments into columns
clark_final <- pivot_wider(total_clark, names_from = treatment,
names_glue = "{treatment}_{.value}",
values_from = c("mean", "sd", "n"))
# rename columns to match meta data column names
clark_final <- clark_final %>% rename("oa.mean" = CO2_mean,
"oa.sd" = CO2_sd,
"oa.n" = CO2_n,
"ctrl.mean" = control_mean,
"ctrl.sd" = control_sd,
"ctrl.n" = control_n)
# reorder the columns to match meta data
clark_final <- clark_final[names(meta_data)]
# The Pub.year.IF and X2017.IF are factors in the meta data set because of empty entries, will convert clark into factors
clark_final$Pub.year.IF <- as.factor(clark_final$Pub.year.IF)
clark_final$X2017.IF <- as.factor(clark_final$X2017.IF)
# bind the two data sets by rows
data_full <- rbind(meta_data, clark_final)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n,
data = data_full,
)
lnRR_data %>% slice_head(n = 5)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n,
data = data_full,
)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n,
data = data_full
)
lnRR_data %>% slice_head(n = 5)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n,
data = data_full,
drop00 = TRUE
)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n
)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(data = data_full,
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n
)
log(0.000001)
log(0.0001/0.0007)
View(data_full)
select(data_full$oa.mean < 1)
select(oa.mean < 1, data_full)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- escalc(data = data_full,
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n
)
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
lnRR_data <- metafor::escalc(data = data_full,
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n
)
lnRR_long <- log(data_full$oa.mean / data_full$ctrl.mean)
lnRR_long
data_full[88:98]
data_full[88:98,]
data_full[data$ctrl.mean < 0]
data_full[data_full$ctrl.mean < 0]
data_full[data_full$ctrl.mean < 0,]
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
# Need to exclude negative mean values because lnRR doesn't work with negative means
data_pos <- data_full[data_full$ctrl.mean < 0,]
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
# Need to exclude negative mean values because lnRR doesn't work with negative means
data_pos <- data_full[data_full$ctrl.mean > 0,]
data_pos <- data_full[data_full$oa.mean > 0]
data_pos <- data_pos[data_full$oa.mean > 0]
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
# Need to exclude negative mean values because lnRR doesn't work with negative means
data_pos <- data_full[data_full$ctrl.mean > 0,]
data_pos <- data_pos[data_full$oa.mean > 0,]
lnRR_data <- metafor::escalc(data = data_pos,
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n
)
head(lnRR_data)
lnRR_data <- metafor::escalc(data = data_pos,
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n
)
lnRR_long <- log(data_pos$oa.mean / data_pos$ctrl.mean)
View(lnRR_data)
lnRR_long
View(data_pos)
data_pos[155,]
# calculate the log response ratio (lnRR) effect size for every row
# measure = ROM for log transformed ratio of means?
# Need to exclude negative mean values because lnRR doesn't work with negative means
data_pos <- data_full[data_full$ctrl.mean > 0,]
data_pos <- data_pos[data_pos$oa.mean > 0,]
lnRR_data <- metafor::escalc(data = data_pos,
measure = "ROM",
m1i = oa.mean, # mean treatment
sd1i = oa.sd, # sd treatment
n1i = oa.n,
m2i = ctrl.mean, # mean control
sd2i = ctrl.sd,
n2i = ctrl.n
)
head(lnRR_data)
lnRR_long <- log(data_pos$oa.mean / data_pos$ctrl.mean)
lnRR_long
lnRR_data %>% slice_head(n = 5)
lnRR_data
